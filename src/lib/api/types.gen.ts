// This file is auto-generated by @hey-api/openapi-ts

export type UserUpdateRestRequest = {
  name?: string;
  nickname: string;
  phone_number?: string;
  email_address?: string;
  passport_number?: string;
  profile_image_file_id?: string;
  enable_push_notification?: boolean;
};

export type UserResponse = {
  id: string;
  type: 'NORMAL' | 'TEMP';
  role: 'CUSTOMER' | 'STORE_MANAGER' | 'SYSTEM_ADMIN';
  username?: string;
  name?: string;
  nickname: string;
  nationality?: number;
  phone_number?: string;
  email_address?: string;
  birth?: string;
  gender?: 'FEMALE' | 'MALE';
  passport_number?: string;
  profile_image_file_id?: string;
  agreed_to_consent?: boolean;
  enable_push_notification?: boolean;
  store_id?: number;
  created_by?: string;
};

export type UpdateVoucherTemplateRestRequest = {
  name: string;
};

export type ManagerVoucherTemplateRestResponse = {
  id: string;
  name: string;
  type: 'STORE' | 'FOOD';
  gold: number;
  silver: number;
  bronze: number;
  created_voucher_count?: number;
  created_at: string;
  updated_at: string;
};

export type RestResponseManagerVoucherTemplateRestResponse = {
  data?: ManagerVoucherTemplateRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type UpdateStoreRestRequest = {
  league_id: number;
  name: string;
  phone_number: string;
  address: string;
  longitude: number;
  latitude: number;
  store_image_file_ids: Array<string>;
  available_facility_types: Array<
    | 'PARKING_LOT'
    | 'CREDIT_CARD'
    | 'WIFI'
    | 'RESERVATION'
    | 'GROUP_TABLE'
    | 'SMOKING_ROOM'
    | 'VALET_PARKING'
  >;
};

export type RestResponseStoreRestResponse = {
  data?: StoreRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type StoreRestResponse = {
  id: number;
  created_by: string;
  league_id: number;
  name: string;
  phone_number: string;
  address: string;
  longitude: number;
  latitude: number;
  store_image_file_ids: Array<string>;
  available_facility_types: Array<
    | 'PARKING_LOT'
    | 'CREDIT_CARD'
    | 'WIFI'
    | 'RESERVATION'
    | 'GROUP_TABLE'
    | 'SMOKING_ROOM'
    | 'VALET_PARKING'
  >;
  created_at: string;
  updated_at: string;
};

export type UpdatePartialPaymentRestRequest = {
  id?: string;
  /**
   * 결제 타입. 신규 부분 결제 생성 시 Voucher 유형은 선택 불가
   */
  payment_type: 'CARD' | 'CASH' | 'TRANSFER' | 'VOUCHER';
  price: number;
  /**
   * 부분 결제 상태. 신규 부분 결제 생성 혹은 기존 부분 결제 수정 시 Canceled 는 선택 불가
   */
  status: 'PENDING' | 'PAID' | 'CANCELED';
};

export type UpdatePaymentRestRequest = {
  payable_item_id: string;
  status: 'PENDING' | 'PAID';
  memo?: string;
  partial_payments: Array<UpdatePartialPaymentRestRequest>;
};

export type PartialPaymentRestResponse = {
  id: string;
  payment_type: 'CARD' | 'CASH' | 'TRANSFER' | 'VOUCHER';
  price?: number;
  reference_id?: string;
  status: 'PENDING' | 'PAID' | 'CANCELED';
  created_at: string;
  updated_at: string;
};

export type PaymentRestResponse = {
  id: string;
  store_id: number;
  created_by?: string;
  payed_by: string;
  original_payed_by?: string;
  payable_item_id?: string;
  reference_id?: string;
  partial_payments: Array<PartialPaymentRestResponse>;
  total_price: number;
  payment_status: 'PENDING' | 'PAID' | 'CANCELED';
  memo?: string;
  created_at: string;
  updated_at: string;
};

export type RestResponsePaymentRestResponse = {
  data?: PaymentRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type UpdatePayableItemRestRequest = {
  name: string;
  position: number;
};

export type PayableItemRestResponse = {
  id: string;
  store_id: number;
  created_by: string;
  name: string;
  position: number;
  created_at: string;
  updated_at: string;
};

export type RestResponsePayableItemRestResponse = {
  data?: PayableItemRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type UpdateItemRestRequest = {
  item_category: 'MEAL' | 'ALCOHOL' | 'BEVERAGE' | 'ETC';
  price: number;
  name: string;
  position: number;
  image_file_id?: string;
};

export type ItemRestResponse = {
  id: string;
  store_id: number;
  created_by: string;
  item_category: 'MEAL' | 'ALCOHOL' | 'BEVERAGE' | 'ETC';
  price: number;
  name: string;
  position: number;
  image_file_id?: string;
  created_at: string;
  updated_at: string;
};

export type RestResponseItemRestResponse = {
  data?: ItemRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type UpdateGameRestRequest = {
  game_type_id: number;
  mode: string;
  buy_in_amount: number;
  reg_close_level: number;
  max_players: number;
  early_chips?: number;
  starting_chips: number;
  reentry_chips: number;
  break_time: string;
  structure_template_id: string;
  structures: string;
  scheduled_at: string;
  prize: string;
};

export type GameRestResponse = {
  id: string;
  store_id: number;
  created_by: string;
  game_type_id: number;
  mode: string;
  buy_in_amount: number;
  reg_close_level?: number;
  max_players: number;
  early_chips?: number;
  starting_chips: number;
  reentry_chips?: number;
  break_time: string;
  structure_template_id: string;
  structures: string;
  scheduled_at: string;
  status: 'WAITING' | 'PLAYING' | 'FINISHED';
  prize: string;
  created_at: string;
  updated_at: string;
};

export type RestResponseGameRestResponse = {
  data?: GameRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type UpdateGameTableRestRequest = {
  name: string;
  max_players: number;
};

export type GameTableRestResponse = {
  id: string;
  game_id: string;
  name: string;
  max_players: number;
  participants?: Array<TestUser>;
  created_at: string;
  updated_at: string;
};

export type RestResponseGameTableRestResponse = {
  data?: GameTableRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type TestUser = {
  id: string;
  type: 'NORMAL' | 'TEMP';
  nickname: string;
};

export type UpdateGameStructureTemplateRestRequest = {
  /**
   * json string
   */
  structures: string;
};

export type GameStructureTemplateRestResponse = {
  id: string;
  created_by: string;
  structures: string;
  created_at: string;
  updated_at: string;
};

export type RestResponseGameStructureTemplateRestResponse = {
  data?: GameStructureTemplateRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type UpdateLeagueRestRequest = {
  name: string;
  prize_point_weight: number;
  payed_amount_point_weight: number;
  voucher_payed_amount_point_weight: number;
  visit_count_point_weight: number;
};

export type LeagueRestResponse = {
  id: number;
  name: string;
  created_by: string;
  prize_point_weight: number;
  payed_amount_point_weight: number;
  voucher_payed_amount_point_weight: number;
  visit_count_point_weight: number;
  created_at: string;
  updated_at: string;
};

export type RestResponseLeagueRestResponse = {
  data?: LeagueRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type UpdateGameTypeRestRequest = {
  name: string;
  position: number;
};

export type GameTypeRestResponse = {
  id: number;
  name: string;
  position: number;
  created_at: string;
  updated_at: string;
};

export type RestResponseGameTypeRestResponse = {
  data?: GameTypeRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type UpdateCompetitionRestRequest = {
  name: string;
  store_id: number;
  scheduled_at: string;
};

export type CompetitionRestResponse = {
  id: string;
  created_by: string;
  name: string;
  store_id: number;
  scheduled_at: string;
  created_at: string;
  updated_at: string;
};

export type RestResponseCompetitionRestResponse = {
  data?: CompetitionRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type UseVouchersRestRequest = {
  used_store_id: number;
  amount: number;
};

export type RestResponseVoucherUsageRestResponse = {
  data?: VoucherUsageRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type VoucherDto = {
  id: string;
  voucher_template_id: string;
  created_by: string;
  type: 'STORE' | 'FOOD';
  disbursed_store_id?: number;
  disbursed_to?: string;
  original_disbursed_to?: string;
  voucher_disbursement_id?: string;
  expired_at?: string;
  voucher_usage_id?: string;
  used_store_id?: number;
  status: 'CREATED' | 'DISBURSED' | 'USED' | 'EXPIRED';
  created_at?: string;
  updated_at?: string;
};

export type VoucherUsageRestResponse = {
  id: string;
  user_id: string;
  voucher_template_id: string;
  used_store_id: number;
  amount: number;
  vouchers?: Array<VoucherDto>;
  created_at: string;
  updated_at: string;
};

export type RestResponseString = {
  data?: string;
  status: string;
  message: string;
  timestamp: string;
};

export type GameReservationRestResponse = {
  id: string;
  game_id: string;
  user_id: string;
  status: 'RESERVED' | 'CANCELED';
  created_at: string;
  updated_at: string;
};

export type RestResponseGameReservationRestResponse = {
  data?: GameReservationRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type CreateOrderRestRequest = {
  order_items: Array<OrderItemAmount>;
};

export type OrderItemAmount = {
  item_id: string;
  amount: number;
};

export type OrderItemRestResponse = {
  item?: ItemRestResponse;
  amount: number;
  purchased_price: number;
  total_price: number;
};

export type OrderRestResponse = {
  id: string;
  store_id: number;
  user_id: string;
  total_price: number;
  status: string;
  items: Array<OrderItemRestResponse>;
  voucher_usage_id?: string;
  created_at: string;
  updated_at: string;
};

export type RestResponseOrderRestResponse = {
  data?: OrderRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type RestResponseUnit = {
  status: string;
  message: string;
  timestamp: string;
};

export type CreateVoucherTemplateRestRequest = {
  name: string;
  gold: number;
  silver: number;
  bronze: number;
};

export type RestResponseListVoucherRestResponse = {
  data?: Array<VoucherRestResponse>;
  status: string;
  message: string;
  timestamp: string;
};

export type VoucherRestResponse = {
  id: string;
  voucher_template_id: string;
  created_by: string;
  type: 'STORE' | 'FOOD';
  voucher_disbursement_id?: string;
  disbursed_to?: string;
  disbursed_store_id?: number;
  expired_at?: string;
  voucher_usage_id?: string;
  used_store_id?: number;
  status: 'CREATED' | 'DISBURSED' | 'USED' | 'EXPIRED';
  created_at: string;
  updated_at: string;
};

export type DisburseVoucherRestRequest = {
  disbursed_to: string;
  amount: number;
  disbursed_store_id: number;
  expired_at: string;
};

export type CreateStoreRestRequest = {
  league_id: number;
  name: string;
  phone_number: string;
  address: string;
  longitude: number;
  latitude: number;
  store_image_file_ids: Array<string>;
  available_facility_types: Array<
    | 'PARKING_LOT'
    | 'CREDIT_CARD'
    | 'WIFI'
    | 'RESERVATION'
    | 'GROUP_TABLE'
    | 'SMOKING_ROOM'
    | 'VALET_PARKING'
  >;
};

export type RestResponseStoreVisitRestResponse = {
  data?: StoreVisitRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type StoreVisitRestResponse = {
  store_id: number;
  date: string;
  user_id: string;
  created_at: string;
  updated_at: string;
};

export type CreateTempUserInStoreRestRequest = {
  nickname: string;
  name?: string;
  phone_number?: string;
};

export type RestResponseUserRestResponse = {
  data?: UserRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type UserRestResponse = {
  id: string;
  type: 'NORMAL' | 'TEMP';
  role: 'CUSTOMER' | 'STORE_MANAGER' | 'SYSTEM_ADMIN';
  sub?: string;
  username?: string;
  name?: string;
  nickname: string;
  nationality?: number;
  phone_number?: string;
  email_address?: string;
  birth?: string;
  gender?: 'FEMALE' | 'MALE';
  passport_number?: string;
  agreed_to_consent?: boolean;
  enable_push_notification?: boolean;
  store_id?: number;
  created_by?: string;
  synced_to?: string;
  created_at: string;
  updated_at: string;
};

export type MergeTempUserRestRequest = {
  normal_user_id: string;
};

export type RestResponseTempUserMergeRestResponse = {
  data?: TempUserMergeRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type TempUserMergeRestResponse = {
  id: string;
  created_by: string;
  temp_user_id: string;
  normal_user_id: string;
  changed_payment_ids: Array<string>;
  changed_voucher_disbursement_ids: Array<string>;
  changed_point_award_ids: Array<string>;
  changed_game_user_ranking_ids: Array<number>;
  created_at: string;
  updated_at: string;
};

export type CreateGameRestRequest = {
  game_type_id: number;
  mode: string;
  buy_in_amount: number;
  reg_close_level: number;
  max_players: number;
  early_chips?: number;
  starting_chips: number;
  reentry_chips: number;
  break_time: string;
  structure_template_id: string;
  /**
   * json string
   */
  structures: string;
  scheduled_at: string;
  status: 'WAITING' | 'PLAYING' | 'FINISHED';
  prize: string;
};

export type CreatePartialPaymentRestRequest = {
  payment_type: 'CASH' | 'CARD' | 'TRANSFER';
  price: number;
  status: 'PENDING' | 'PAID' | 'CANCELED';
};

export type CreatePaymentRestRequest = {
  payed_by: string;
  payable_item_id?: string;
  partial_payments: Array<CreatePartialPaymentRestRequest>;
  status: 'PENDING' | 'PAID';
  memo?: string;
};

export type CreatePayableItemRestRequest = {
  name: string;
  position: number;
};

export type CreateItemRestRequest = {
  item_category: 'MEAL' | 'ALCOHOL' | 'BEVERAGE' | 'ETC';
  price: number;
  name: string;
  position: number;
  image_file_id?: string;
};

export type SendNotificationRestRequest = {
  title: string;
  payload: string;
  receivers?: Array<string>;
};

export type NotificationRestResponse = {
  id: string;
  sent_by: string;
  event: 'CUSTOM';
  title: string;
  payload: string;
  status: 'CREATED' | 'PROCESSED' | 'FAILED';
  created_at: string;
  updated_at: string;
};

export type RestResponseNotificationRestResponse = {
  data?: NotificationRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type CreateGameTableRestRequest = {
  name: string;
  max_players: number;
};

export type ChangeGameTableParticipantsRestRequest = {
  participant_ids: Array<string>;
};

export type CreateGameUserRankingRestRequest = {
  user_id: string;
  ranking: number;
  ranking_weight: number;
};

export type GameUserRankingRestResponse = {
  id: number;
  game_id: string;
  user_id: string;
  created_by: string;
  original_user_id?: string;
  ranking: number;
  ranking_weight: number;
  created_at: string;
  updated_at: string;
};

export type RestResponseListGameUserRankingRestResponse = {
  data?: Array<GameUserRankingRestResponse>;
  status: string;
  message: string;
  timestamp: string;
};

export type CreateGameStructureTemplateRestRequest = {
  /**
   * json string
   */
  structures: string;
};

export type RegisterUserRestRequest = {
  username: string;
  password: string;
  name: string;
  nickname: string;
  nationality?: number;
  phone_number: string;
  email_address: string;
  birth: string;
  gender: 'FEMALE' | 'MALE';
  passport_number?: string;
  profile_image_file_id?: string;
  agreed_to_consent: boolean;
};

export type AuthTokensRestResponse = {
  user_id?: string;
  username: string;
  access_token: string;
  refresh_token?: string;
};

export type RestResponseAuthTokensRestResponse = {
  data?: AuthTokensRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type RegisterUserFromConnectingUserRestRequest = {
  connecting_user_id: string;
  nickname: string;
  agreed_to_consent: boolean;
};

export type RefreshAccessTokenRestRequest = {
  refresh_token: string;
};

export type LoginRestRequest = {
  username: string;
  password: string;
};

export type RestResponseBoolean = {
  data?: boolean;
  status: string;
  message: string;
  timestamp: string;
};

export type CreateLeagueRestRequest = {
  name: string;
  prize_point_weight: number;
  payed_amount_point_weight: number;
  voucher_payed_amount_point_weight: number;
  visit_count_point_weight: number;
};

export type CreateGameTypeRestRequest = {
  name: string;
  position: number;
};

export type CreateCompetitionRestRequest = {
  name: string;
  store_id: number;
  scheduled_at: string;
};

export type FileDto = {
  id: string;
  created_by: string;
  filename: string;
  extension: string;
  status: 'WAITING' | 'COMPLETED' | 'DELETED';
  created_at?: string;
  updated_at?: string;
};

export type RestResponseSetFileUploadCompletedRestResponse = {
  data?: SetFileUploadCompletedRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type SetFileUploadCompletedRestResponse = {
  file: FileDto;
};

export type CustomerVoucherTemplateRestResponse = {
  id: string;
  name: string;
  type: 'STORE' | 'FOOD';
  gold: number;
  silver: number;
  bronze: number;
  available_stores: Array<StoreRestResponse>;
  received_vouchers: Array<VoucherDto>;
  received_voucher_count: number;
  created_at: string;
  updated_at: string;
};

export type RestResponseListCustomerVoucherTemplateRestResponse = {
  data?: Array<CustomerVoucherTemplateRestResponse>;
  status: string;
  message: string;
  timestamp: string;
};

export type RestResponseListGameRestResponse = {
  data?: Array<GameRestResponse>;
  status: string;
  message: string;
  timestamp: string;
};

export type LinksRestResponse = {
  cur: string;
  next?: string;
  prev?: string;
  first: string;
  last: string;
};

export type RestResponseWithPaginationListUserRestResponse = {
  data?: Array<UserRestResponse>;
  status: string;
  message: string;
  total_count: number;
  links: LinksRestResponse;
  timestamp: string;
};

export type UserDto = {
  id: string;
  type: 'NORMAL' | 'TEMP';
  role: 'CUSTOMER' | 'STORE_MANAGER' | 'SYSTEM_ADMIN';
  sub?: string;
  username?: string;
  name?: string;
  nickname: string;
  nationality?:
    | 'UNDEFINED'
    | 'AC'
    | 'AD'
    | 'AE'
    | 'AF'
    | 'AG'
    | 'AI'
    | 'AL'
    | 'AM'
    | 'AN'
    | 'AO'
    | 'AQ'
    | 'AR'
    | 'AS'
    | 'AT'
    | 'AU'
    | 'AW'
    | 'AX'
    | 'AZ'
    | 'BA'
    | 'BB'
    | 'BD'
    | 'BE'
    | 'BF'
    | 'BG'
    | 'BH'
    | 'BI'
    | 'BJ'
    | 'BL'
    | 'BM'
    | 'BN'
    | 'BO'
    | 'BQ'
    | 'BR'
    | 'BS'
    | 'BT'
    | 'BU'
    | 'BV'
    | 'BW'
    | 'BY'
    | 'BZ'
    | 'CA'
    | 'CC'
    | 'CD'
    | 'CF'
    | 'CG'
    | 'CH'
    | 'CI'
    | 'CK'
    | 'CL'
    | 'CM'
    | 'CN'
    | 'CO'
    | 'CP'
    | 'CR'
    | 'CS'
    | 'CU'
    | 'CV'
    | 'CW'
    | 'CX'
    | 'CY'
    | 'CZ'
    | 'DE'
    | 'DG'
    | 'DJ'
    | 'DK'
    | 'DM'
    | 'DO'
    | 'DZ'
    | 'EA'
    | 'EC'
    | 'EE'
    | 'EG'
    | 'EH'
    | 'ER'
    | 'ES'
    | 'ET'
    | 'EU'
    | 'EZ'
    | 'FI'
    | 'FJ'
    | 'FK'
    | 'FM'
    | 'FO'
    | 'FR'
    | 'FX'
    | 'GA'
    | 'GB'
    | 'GD'
    | 'GE'
    | 'GF'
    | 'GG'
    | 'GH'
    | 'GI'
    | 'GL'
    | 'GM'
    | 'GN'
    | 'GP'
    | 'GQ'
    | 'GR'
    | 'GS'
    | 'GT'
    | 'GU'
    | 'GW'
    | 'GY'
    | 'HK'
    | 'HM'
    | 'HN'
    | 'HR'
    | 'HT'
    | 'HU'
    | 'IC'
    | 'ID'
    | 'IE'
    | 'IL'
    | 'IM'
    | 'IN'
    | 'IO'
    | 'IQ'
    | 'IR'
    | 'IS'
    | 'IT'
    | 'JE'
    | 'JM'
    | 'JO'
    | 'JP'
    | 'KE'
    | 'KG'
    | 'KH'
    | 'KI'
    | 'KM'
    | 'KN'
    | 'KP'
    | 'KR'
    | 'KW'
    | 'KY'
    | 'KZ'
    | 'LA'
    | 'LB'
    | 'LC'
    | 'LI'
    | 'LK'
    | 'LR'
    | 'LS'
    | 'LT'
    | 'LU'
    | 'LV'
    | 'LY'
    | 'MA'
    | 'MC'
    | 'MD'
    | 'ME'
    | 'MF'
    | 'MG'
    | 'MH'
    | 'MK'
    | 'ML'
    | 'MM'
    | 'MN'
    | 'MO'
    | 'MP'
    | 'MQ'
    | 'MR'
    | 'MS'
    | 'MT'
    | 'MU'
    | 'MV'
    | 'MW'
    | 'MX'
    | 'MY'
    | 'MZ'
    | 'NA'
    | 'NC'
    | 'NE'
    | 'NF'
    | 'NG'
    | 'NI'
    | 'NL'
    | 'NO'
    | 'NP'
    | 'NR'
    | 'NT'
    | 'NU'
    | 'NZ'
    | 'OM'
    | 'PA'
    | 'PE'
    | 'PF'
    | 'PG'
    | 'PH'
    | 'PK'
    | 'PL'
    | 'PM'
    | 'PN'
    | 'PR'
    | 'PS'
    | 'PT'
    | 'PW'
    | 'PY'
    | 'QA'
    | 'RE'
    | 'RO'
    | 'RS'
    | 'RU'
    | 'RW'
    | 'SA'
    | 'SB'
    | 'SC'
    | 'SD'
    | 'SE'
    | 'SF'
    | 'SG'
    | 'SH'
    | 'SI'
    | 'SJ'
    | 'SK'
    | 'SL'
    | 'SM'
    | 'SN'
    | 'SO'
    | 'SR'
    | 'SS'
    | 'ST'
    | 'SU'
    | 'SV'
    | 'SX'
    | 'SY'
    | 'SZ'
    | 'TA'
    | 'TC'
    | 'TD'
    | 'TF'
    | 'TG'
    | 'TH'
    | 'TJ'
    | 'TK'
    | 'TL'
    | 'TM'
    | 'TN'
    | 'TO'
    | 'TP'
    | 'TR'
    | 'TT'
    | 'TV'
    | 'TW'
    | 'TZ'
    | 'UA'
    | 'UG'
    | 'UK'
    | 'UM'
    | 'US'
    | 'UY'
    | 'UZ'
    | 'VA'
    | 'VC'
    | 'VE'
    | 'VG'
    | 'VI'
    | 'VN'
    | 'VU'
    | 'WF'
    | 'WS'
    | 'XI'
    | 'XU'
    | 'XK'
    | 'YE'
    | 'YT'
    | 'YU'
    | 'ZA'
    | 'ZM'
    | 'ZR'
    | 'ZW';
  phone_number?: string;
  email_address?: string;
  birth?: string;
  gender?: 'FEMALE' | 'MALE';
  passport_number?: string;
  profile_image_file_id?: string;
  agreed_to_consent?: boolean;
  enable_push_notification?: boolean;
  store_id?: number;
  created_by?: string;
  synced_to?: string;
  created_at?: string;
  updated_at?: string;
};

export type RestResponseListStoreRestResponse = {
  data?: Array<StoreRestResponse>;
  status: string;
  message: string;
  timestamp: string;
};

export type RestResponseListGameReservationRestResponse = {
  data?: Array<GameReservationRestResponse>;
  status: string;
  message: string;
  timestamp: string;
};

export type RestResponseListUserPointAggregateOfStoreRestResponse = {
  data?: Array<UserPointAggregateOfStoreRestResponse>;
  status: string;
  message: string;
  timestamp: string;
};

export type UserPointAggregateOfStoreRestResponse = {
  store_id: number;
  user_id: string;
  point: number;
};

export type RestResponseWithPaginationListUserPointAggregateRestResponse = {
  data?: Array<UserPointAggregateRestResponse>;
  status: string;
  message: string;
  total_count: number;
  links: LinksRestResponse;
  timestamp: string;
};

export type UserPointAggregateRestResponse = {
  user_nickname: string;
  point: number;
  rank?: number;
  top_percent?: number;
};

export type RestResponseUserPointAggregateRestResponse = {
  data?: UserPointAggregateRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type PointAwardRestResponse = {
  id: string;
  created_by: string;
  user_id: string;
  store_id: number;
  amount: number;
  event_type: string;
  weight: number;
  created_at: string;
  updated_at: string;
};

export type RestResponseListPointAwardRestResponse = {
  data?: Array<PointAwardRestResponse>;
  status: string;
  message: string;
  timestamp: string;
};

export type RestResponseWithPaginationListOrderRestResponse = {
  data?: Array<OrderRestResponse>;
  status: string;
  message: string;
  total_count: number;
  links: LinksRestResponse;
  timestamp: string;
};

export type RestResponseListItemRestResponse = {
  data?: Array<ItemRestResponse>;
  status: string;
  message: string;
  timestamp: string;
};

export type ConnectingUserRestResponse = {
  id: string;
  username: string;
  email_address: string;
  name: string;
  phone_number: string;
  birth: string;
  gender: 'FEMALE' | 'MALE';
};

export type ProcessOAuthCallbackRestResponse = {
  access_tokens: AuthTokensRestResponse;
  connecting_user?: ConnectingUserRestResponse;
};

export type RestResponseProcessOAuthCallbackRestResponse = {
  data?: ProcessOAuthCallbackRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type NotificationContentRestResponse = {
  id: string;
  event: 'CUSTOM';
  title: string;
  payload: string;
  status: 'CREATED' | 'SENT' | 'NOT_SENT' | 'READ';
  created_at: string;
  updated_at: string;
};

export type RestResponseWithPaginationListNotificationContentRestResponse = {
  data?: Array<NotificationContentRestResponse>;
  status: string;
  message: string;
  total_count: number;
  links: LinksRestResponse;
  timestamp: string;
};

export type RestResponseNotificationContentRestResponse = {
  data?: NotificationContentRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type RestResponseListManagerVoucherTemplateRestResponse = {
  data?: Array<ManagerVoucherTemplateRestResponse>;
  status: string;
  message: string;
  timestamp: string;
};

export type RestResponseListStoreVisitRestResponse = {
  data?: Array<StoreVisitRestResponse>;
  status: string;
  message: string;
  timestamp: string;
};

export type RestResponseWithPaginationListPaymentRestResponse = {
  data?: Array<PaymentRestResponse>;
  status: string;
  message: string;
  total_count: number;
  links: LinksRestResponse;
  timestamp: string;
};

export type RestResponseListPayableItemRestResponse = {
  data?: Array<PayableItemRestResponse>;
  status: string;
  message: string;
  timestamp: string;
};

export type RestResponseListGameStructureTemplateRestResponse = {
  data?: Array<GameStructureTemplateRestResponse>;
  status: string;
  message: string;
  timestamp: string;
};

export type RestResponseListLeagueRestResponse = {
  data?: Array<LeagueRestResponse>;
  status: string;
  message: string;
  timestamp: string;
};

export type RestResponseWithPaginationListGameRestResponse = {
  data?: Array<GameRestResponse>;
  status: string;
  message: string;
  total_count: number;
  links: LinksRestResponse;
  timestamp: string;
};

export type RestResponseListGameTableRestResponse = {
  data?: Array<GameTableRestResponse>;
  status: string;
  message: string;
  timestamp: string;
};

export type RestResponseWithPaginationListGameUserRankingRestResponse = {
  data?: Array<GameUserRankingRestResponse>;
  status: string;
  message: string;
  total_count: number;
  links: LinksRestResponse;
  timestamp: string;
};

export type RestResponseListGameTypeRestResponse = {
  data?: Array<GameTypeRestResponse>;
  status: string;
  message: string;
  timestamp: string;
};

export type GetFilesRestResponse = {
  files: Array<FileDto>;
};

export type RestResponseGetFilesRestResponse = {
  data?: GetFilesRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type GetFileRestResponse = {
  file: FileDto;
};

export type RestResponseGetFileRestResponse = {
  data?: GetFileRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type GetPresignedObjectUrlRestResponse = {
  object_url: string;
  file: FileDto;
};

export type RestResponseGetPresignedObjectUrlRestResponse = {
  data?: GetPresignedObjectUrlRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type GetPresignedUploadUrlRestResponse = {
  upload_url: string;
  file: FileDto;
};

export type RestResponseGetPresignedUploadUrlRestResponse = {
  data?: GetPresignedUploadUrlRestResponse;
  status: string;
  message: string;
  timestamp: string;
};

export type RestResponseListCompetitionRestResponse = {
  data?: Array<CompetitionRestResponse>;
  status: string;
  message: string;
  timestamp: string;
};

export type FindByIdData = {
  body?: never;
  path?: never;
  query: {
    userId: string;
  };
  url: '/users/<userId>';
};

export type FindByIdResponses = {
  /**
   * OK
   */
  200: UserDto;
};

export type FindByIdResponse = FindByIdResponses[keyof FindByIdResponses];

export type UpdateData = {
  body: UserUpdateRestRequest;
  path?: never;
  query: {
    userId: string;
  };
  url: '/users/<userId>';
};

export type UpdateResponses = {
  /**
   * OK
   */
  200: UserResponse;
};

export type UpdateResponse = UpdateResponses[keyof UpdateResponses];

export type DeleteVoucherTemplateData = {
  body?: never;
  path: {
    voucherTemplateId: string;
  };
  query?: never;
  url: '/manager/voucher-templates/{voucherTemplateId}';
};

export type DeleteVoucherTemplateResponses = {
  /**
   * OK
   */
  200: RestResponseUnit;
};

export type DeleteVoucherTemplateResponse =
  DeleteVoucherTemplateResponses[keyof DeleteVoucherTemplateResponses];

export type UpdateVoucherTemplateData = {
  body: UpdateVoucherTemplateRestRequest;
  path: {
    voucherTemplateId: string;
  };
  query?: never;
  url: '/manager/voucher-templates/{voucherTemplateId}';
};

export type UpdateVoucherTemplateResponses = {
  /**
   * OK
   */
  200: RestResponseManagerVoucherTemplateRestResponse;
};

export type UpdateVoucherTemplateResponse =
  UpdateVoucherTemplateResponses[keyof UpdateVoucherTemplateResponses];

export type DeleteStoreData = {
  body?: never;
  path: {
    storeId: number;
  };
  query?: never;
  url: '/manager/stores/{storeId}';
};

export type DeleteStoreResponses = {
  /**
   * OK
   */
  200: RestResponseString;
};

export type DeleteStoreResponse =
  DeleteStoreResponses[keyof DeleteStoreResponses];

export type UpdateStoreData = {
  body: UpdateStoreRestRequest;
  path: {
    storeId: number;
  };
  query?: never;
  url: '/manager/stores/{storeId}';
};

export type UpdateStoreResponses = {
  /**
   * OK
   */
  200: RestResponseStoreRestResponse;
};

export type UpdateStoreResponse =
  UpdateStoreResponses[keyof UpdateStoreResponses];

export type GetPaymentData = {
  body?: never;
  path: {
    storeId: number;
    paymentId: string;
  };
  query?: never;
  url: '/manager/payment/stores/{storeId}/payments/{paymentId}';
};

export type GetPaymentResponses = {
  /**
   * OK
   */
  200: RestResponsePaymentRestResponse;
};

export type GetPaymentResponse = GetPaymentResponses[keyof GetPaymentResponses];

export type UpdatePaymentData = {
  body: UpdatePaymentRestRequest;
  path: {
    storeId: number;
    paymentId: string;
  };
  query?: never;
  url: '/manager/payment/stores/{storeId}/payments/{paymentId}';
};

export type UpdatePaymentResponses = {
  /**
   * OK
   */
  200: RestResponsePaymentRestResponse;
};

export type UpdatePaymentResponse =
  UpdatePaymentResponses[keyof UpdatePaymentResponses];

export type GetPayableItemData = {
  body?: never;
  path: {
    storeId: number;
    payableItemId: string;
  };
  query?: never;
  url: '/manager/payment/stores/{storeId}/payable-items/{payableItemId}';
};

export type GetPayableItemResponses = {
  /**
   * OK
   */
  200: RestResponsePayableItemRestResponse;
};

export type GetPayableItemResponse =
  GetPayableItemResponses[keyof GetPayableItemResponses];

export type UpdatePayableItemData = {
  body: UpdatePayableItemRestRequest;
  path: {
    storeId: number;
    payableItemId: string;
  };
  query?: never;
  url: '/manager/payment/stores/{storeId}/payable-items/{payableItemId}';
};

export type UpdatePayableItemResponses = {
  /**
   * OK
   */
  200: RestResponsePayableItemRestResponse;
};

export type UpdatePayableItemResponse =
  UpdatePayableItemResponses[keyof UpdatePayableItemResponses];

export type DeleteItemData = {
  body?: never;
  path: {
    itemId: string;
  };
  query?: never;
  url: '/manager/order/items/{itemId}';
};

export type DeleteItemResponses = {
  /**
   * OK
   */
  200: RestResponseUnit;
};

export type DeleteItemResponse = DeleteItemResponses[keyof DeleteItemResponses];

export type UpdateItemData = {
  body: UpdateItemRestRequest;
  path: {
    itemId: string;
  };
  query?: never;
  url: '/manager/order/items/{itemId}';
};

export type UpdateItemResponses = {
  /**
   * OK
   */
  200: RestResponseItemRestResponse;
};

export type UpdateItemResponse = UpdateItemResponses[keyof UpdateItemResponses];

export type UpdateGameData = {
  body: UpdateGameRestRequest;
  path: {
    gameId: string;
  };
  query?: never;
  url: '/manager/games/{gameId}';
};

export type UpdateGameResponses = {
  /**
   * OK
   */
  200: RestResponseGameRestResponse;
};

export type UpdateGameResponse = UpdateGameResponses[keyof UpdateGameResponses];

export type DeleteGameTableData = {
  body?: never;
  path: {
    gameId: string;
    tableId: string;
  };
  query?: never;
  url: '/manager/games/{gameId}/tables/{tableId}';
};

export type DeleteGameTableResponses = {
  /**
   * OK
   */
  200: RestResponseString;
};

export type DeleteGameTableResponse =
  DeleteGameTableResponses[keyof DeleteGameTableResponses];

export type UpdateGameTableData = {
  body: UpdateGameTableRestRequest;
  path: {
    gameId: string;
    tableId: string;
  };
  query?: never;
  url: '/manager/games/{gameId}/tables/{tableId}';
};

export type UpdateGameTableResponses = {
  /**
   * OK
   */
  200: RestResponseGameTableRestResponse;
};

export type UpdateGameTableResponse =
  UpdateGameTableResponses[keyof UpdateGameTableResponses];

export type GetGameStructureTemplateData = {
  body?: never;
  path: {
    gameStructureTemplateId: string;
  };
  query?: never;
  url: '/manager/games/structure-templates/{gameStructureTemplateId}';
};

export type GetGameStructureTemplateResponses = {
  /**
   * OK
   */
  200: RestResponseGameStructureTemplateRestResponse;
};

export type GetGameStructureTemplateResponse =
  GetGameStructureTemplateResponses[keyof GetGameStructureTemplateResponses];

export type UpdateGameStructureTemplateData = {
  body: UpdateGameStructureTemplateRestRequest;
  path: {
    gameStructureTemplateId: string;
  };
  query?: never;
  url: '/manager/games/structure-templates/{gameStructureTemplateId}';
};

export type UpdateGameStructureTemplateResponses = {
  /**
   * OK
   */
  200: RestResponseGameStructureTemplateRestResponse;
};

export type UpdateGameStructureTemplateResponse =
  UpdateGameStructureTemplateResponses[keyof UpdateGameStructureTemplateResponses];

export type DeleteLeagueData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: '/admin/leagues/{id}';
};

export type DeleteLeagueResponses = {
  /**
   * OK
   */
  200: RestResponseString;
};

export type DeleteLeagueResponse =
  DeleteLeagueResponses[keyof DeleteLeagueResponses];

export type UpdateLeagueData = {
  body: UpdateLeagueRestRequest;
  path: {
    id: number;
  };
  query?: never;
  url: '/admin/leagues/{id}';
};

export type UpdateLeagueResponses = {
  /**
   * OK
   */
  200: RestResponseLeagueRestResponse;
};

export type UpdateLeagueResponse =
  UpdateLeagueResponses[keyof UpdateLeagueResponses];

export type DeleteGameTypeData = {
  body?: never;
  path: {
    gameTypeId: number;
  };
  query?: never;
  url: '/admin/games/game-types/{gameTypeId}';
};

export type DeleteGameTypeResponses = {
  /**
   * OK
   */
  200: RestResponseString;
};

export type DeleteGameTypeResponse =
  DeleteGameTypeResponses[keyof DeleteGameTypeResponses];

export type UpdateGameTypeData = {
  body: UpdateGameTypeRestRequest;
  path: {
    gameTypeId: number;
  };
  query?: never;
  url: '/admin/games/game-types/{gameTypeId}';
};

export type UpdateGameTypeResponses = {
  /**
   * OK
   */
  200: RestResponseGameTypeRestResponse;
};

export type UpdateGameTypeResponse =
  UpdateGameTypeResponses[keyof UpdateGameTypeResponses];

export type DeleteCompetitionData = {
  body?: never;
  path: {
    competitionId: string;
  };
  query?: never;
  url: '/admin/competitions/{competitionId}';
};

export type DeleteCompetitionResponses = {
  /**
   * OK
   */
  200: RestResponseUnit;
};

export type DeleteCompetitionResponse =
  DeleteCompetitionResponses[keyof DeleteCompetitionResponses];

export type UpdateCompetitionData = {
  body: UpdateCompetitionRestRequest;
  path: {
    competitionId: string;
  };
  query?: never;
  url: '/admin/competitions/{competitionId}';
};

export type UpdateCompetitionResponses = {
  /**
   * OK
   */
  200: RestResponseCompetitionRestResponse;
};

export type UpdateCompetitionResponse =
  UpdateCompetitionResponses[keyof UpdateCompetitionResponses];

export type UseVouchersData = {
  body: UseVouchersRestRequest;
  path: {
    voucherTemplateId: string;
  };
  query?: never;
  url: '/voucher-templates/{voucherTemplateId}/use-vouchers';
};

export type UseVouchersResponses = {
  /**
   * OK
   */
  200: RestResponseVoucherUsageRestResponse;
};

export type UseVouchersResponse =
  UseVouchersResponses[keyof UseVouchersResponses];

export type UnregisterDeviceTokenData = {
  body: string;
  path?: never;
  query?: never;
  url: '/users/device-token';
};

export type UnregisterDeviceTokenResponses = {
  /**
   * OK
   */
  200: RestResponseString;
};

export type UnregisterDeviceTokenResponse =
  UnregisterDeviceTokenResponses[keyof UnregisterDeviceTokenResponses];

export type RegisterDeviceTokenData = {
  body: string;
  path?: never;
  query?: never;
  url: '/users/device-token';
};

export type RegisterDeviceTokenResponses = {
  /**
   * OK
   */
  200: RestResponseString;
};

export type RegisterDeviceTokenResponse =
  RegisterDeviceTokenResponses[keyof RegisterDeviceTokenResponses];

export type GetReservationData = {
  body?: never;
  path: {
    gameId: string;
  };
  query?: never;
  url: '/reservations/games/{gameId}';
};

export type GetReservationResponses = {
  /**
   * OK
   */
  200: RestResponseGameReservationRestResponse;
};

export type GetReservationResponse =
  GetReservationResponses[keyof GetReservationResponses];

export type ReserveGameData = {
  body?: never;
  path: {
    gameId: string;
  };
  query?: never;
  url: '/reservations/games/{gameId}';
};

export type ReserveGameResponses = {
  /**
   * OK
   */
  200: RestResponseGameReservationRestResponse;
};

export type ReserveGameResponse =
  ReserveGameResponses[keyof ReserveGameResponses];

export type CancelReservationData = {
  body?: never;
  path: {
    gameId: string;
  };
  query?: never;
  url: '/reservations/games/{gameId}/cancel';
};

export type CancelReservationResponses = {
  /**
   * OK
   */
  200: RestResponseGameReservationRestResponse;
};

export type CancelReservationResponse =
  CancelReservationResponses[keyof CancelReservationResponses];

export type GetMadeOrdersInStoreData = {
  body?: never;
  path: {
    storeId: number;
  };
  query?: {
    status?: 'ORDERED' | 'PREPARING' | 'COMPLETED' | 'CANCELED';
    page?: number;
    size?: number;
  };
  url: '/order/stores/{storeId}/orders';
};

export type GetMadeOrdersInStoreResponses = {
  /**
   * OK
   */
  200: RestResponseWithPaginationListOrderRestResponse;
};

export type GetMadeOrdersInStoreResponse =
  GetMadeOrdersInStoreResponses[keyof GetMadeOrdersInStoreResponses];

export type CreateOrderData = {
  body: CreateOrderRestRequest;
  path: {
    storeId: number;
  };
  query?: never;
  url: '/order/stores/{storeId}/orders';
};

export type CreateOrderResponses = {
  /**
   * OK
   */
  200: RestResponseOrderRestResponse;
};

export type CreateOrderResponse =
  CreateOrderResponses[keyof CreateOrderResponses];

export type CancelOrderData = {
  body?: never;
  path: {
    orderId: string;
  };
  query?: never;
  url: '/order/orders/{orderId}/cancel';
};

export type CancelOrderResponses = {
  /**
   * OK
   */
  200: RestResponseUnit;
};

export type CancelOrderResponse =
  CancelOrderResponses[keyof CancelOrderResponses];

export type GetCreatedVoucherTemplatesData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/manager/voucher-templates';
};

export type GetCreatedVoucherTemplatesResponses = {
  /**
   * OK
   */
  200: RestResponseListManagerVoucherTemplateRestResponse;
};

export type GetCreatedVoucherTemplatesResponse =
  GetCreatedVoucherTemplatesResponses[keyof GetCreatedVoucherTemplatesResponses];

export type CreateVoucherTemplateData = {
  body: CreateVoucherTemplateRestRequest;
  path?: never;
  query?: never;
  url: '/manager/voucher-templates';
};

export type CreateVoucherTemplateResponses = {
  /**
   * OK
   */
  200: RestResponseManagerVoucherTemplateRestResponse;
};

export type CreateVoucherTemplateResponse =
  CreateVoucherTemplateResponses[keyof CreateVoucherTemplateResponses];

export type CreateVouchersData = {
  body?: never;
  path: {
    voucherTemplateId: string;
  };
  query: {
    quantity: number;
  };
  url: '/manager/voucher-templates/{voucherTemplateId}/vouchers';
};

export type CreateVouchersResponses = {
  /**
   * OK
   */
  200: RestResponseListVoucherRestResponse;
};

export type CreateVouchersResponse =
  CreateVouchersResponses[keyof CreateVouchersResponses];

export type DisburseVouchersData = {
  body: DisburseVoucherRestRequest;
  path: {
    voucherTemplateId: string;
  };
  query?: never;
  url: '/manager/voucher-templates/{voucherTemplateId}/disburse-vouchers';
};

export type DisburseVouchersResponses = {
  /**
   * OK
   */
  200: RestResponseListVoucherRestResponse;
};

export type DisburseVouchersResponse =
  DisburseVouchersResponses[keyof DisburseVouchersResponses];

export type GetCreatedStoresData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/manager/stores';
};

export type GetCreatedStoresResponses = {
  /**
   * OK
   */
  200: RestResponseListStoreRestResponse;
};

export type GetCreatedStoresResponse =
  GetCreatedStoresResponses[keyof GetCreatedStoresResponses];

export type CreateStoreData = {
  body: CreateStoreRestRequest;
  path?: never;
  query?: never;
  url: '/manager/stores';
};

export type CreateStoreResponses = {
  /**
   * OK
   */
  200: RestResponseStoreRestResponse;
};

export type CreateStoreResponse =
  CreateStoreResponses[keyof CreateStoreResponses];

export type CreateTodayStoreVisitData = {
  /**
   * 방문자 ID
   */
  body: string;
  path: {
    storeId: number;
  };
  query?: never;
  url: '/manager/stores/{storeId}/today-visits';
};

export type CreateTodayStoreVisitResponses = {
  /**
   * OK
   */
  200: RestResponseStoreVisitRestResponse;
};

export type CreateTodayStoreVisitResponse =
  CreateTodayStoreVisitResponses[keyof CreateTodayStoreVisitResponses];

export type CreateTempUserData = {
  body: CreateTempUserInStoreRestRequest;
  path: {
    storeId: number;
  };
  query?: never;
  url: '/manager/stores/{storeId}/temp-users';
};

export type CreateTempUserResponses = {
  /**
   * OK
   */
  200: RestResponseUserRestResponse;
};

export type CreateTempUserResponse =
  CreateTempUserResponses[keyof CreateTempUserResponses];

export type MergeTempUserData = {
  body: MergeTempUserRestRequest;
  path: {
    storeId: number;
    tempUserId: string;
  };
  query?: never;
  url: '/manager/stores/{storeId}/temp-users/{tempUserId}/merge';
};

export type MergeTempUserResponses = {
  /**
   * OK
   */
  200: RestResponseTempUserMergeRestResponse;
};

export type MergeTempUserResponse =
  MergeTempUserResponses[keyof MergeTempUserResponses];

export type CreateGameData = {
  body: CreateGameRestRequest;
  path: {
    storeId: number;
  };
  query?: never;
  url: '/manager/stores/{storeId}/games';
};

export type CreateGameResponses = {
  /**
   * OK
   */
  200: RestResponseGameRestResponse;
};

export type CreateGameResponse = CreateGameResponses[keyof CreateGameResponses];

export type GetPaymentsInStoreData = {
  body?: never;
  path: {
    storeId: number;
  };
  query?: {
    status?: 'PENDING' | 'PAID' | 'CANCELED';
    /**
     * 사용자 이름, 전화번호, 여권번호 필드 대상 keyword 검색 파라미터입니다.
     */
    keyword?: string;
    page?: number;
    size?: number;
  };
  url: '/manager/payment/stores/{storeId}/payments';
};

export type GetPaymentsInStoreResponses = {
  /**
   * OK
   */
  200: RestResponseWithPaginationListPaymentRestResponse;
};

export type GetPaymentsInStoreResponse =
  GetPaymentsInStoreResponses[keyof GetPaymentsInStoreResponses];

export type CreatePaymentData = {
  body: CreatePaymentRestRequest;
  path: {
    storeId: number;
  };
  query?: never;
  url: '/manager/payment/stores/{storeId}/payments';
};

export type CreatePaymentResponses = {
  /**
   * OK
   */
  200: RestResponsePaymentRestResponse;
};

export type CreatePaymentResponse =
  CreatePaymentResponses[keyof CreatePaymentResponses];

export type CancelPartialPaymentData = {
  body?: never;
  path: {
    storeId: number;
    paymentId: string;
    partialPaymentId: string;
  };
  query?: never;
  url: '/manager/payment/stores/{storeId}/payments/{paymentId}/partial-payments/{partialPaymentId}/cancel';
};

export type CancelPartialPaymentResponses = {
  /**
   * OK
   */
  200: RestResponsePaymentRestResponse;
};

export type CancelPartialPaymentResponse =
  CancelPartialPaymentResponses[keyof CancelPartialPaymentResponses];

export type CancelPaymentData = {
  body?: never;
  path: {
    storeId: number;
    paymentId: string;
  };
  query?: never;
  url: '/manager/payment/stores/{storeId}/payments/{paymentId}/cancel';
};

export type CancelPaymentResponses = {
  /**
   * OK
   */
  200: RestResponsePaymentRestResponse;
};

export type CancelPaymentResponse =
  CancelPaymentResponses[keyof CancelPaymentResponses];

export type GetPayableItemsInStoreData = {
  body?: never;
  path: {
    storeId: number;
  };
  query?: never;
  url: '/manager/payment/stores/{storeId}/payable-items';
};

export type GetPayableItemsInStoreResponses = {
  /**
   * OK
   */
  200: RestResponseListPayableItemRestResponse;
};

export type GetPayableItemsInStoreResponse =
  GetPayableItemsInStoreResponses[keyof GetPayableItemsInStoreResponses];

export type CreatePayableItemData = {
  body: CreatePayableItemRestRequest;
  path: {
    storeId: number;
  };
  query?: never;
  url: '/manager/payment/stores/{storeId}/payable-items';
};

export type CreatePayableItemResponses = {
  /**
   * OK
   */
  200: RestResponsePayableItemRestResponse;
};

export type CreatePayableItemResponse =
  CreatePayableItemResponses[keyof CreatePayableItemResponses];

export type CreateItemData = {
  body: CreateItemRestRequest;
  path: {
    storeId: number;
  };
  query?: never;
  url: '/manager/order/stores/{storeId}/items';
};

export type CreateItemResponses = {
  /**
   * OK
   */
  200: RestResponseItemRestResponse;
};

export type CreateItemResponse = CreateItemResponses[keyof CreateItemResponses];

export type CompleteOrderData = {
  body?: never;
  path: {
    orderId: string;
  };
  query?: never;
  url: '/manager/order/orders/{orderId}/complete';
};

export type CompleteOrderResponses = {
  /**
   * OK
   */
  200: RestResponseOrderRestResponse;
};

export type CompleteOrderResponse =
  CompleteOrderResponses[keyof CompleteOrderResponses];

export type AcceptOrderData = {
  body?: never;
  path: {
    orderId: string;
  };
  query?: never;
  url: '/manager/order/orders/{orderId}/accept';
};

export type AcceptOrderResponses = {
  /**
   * OK
   */
  200: RestResponseOrderRestResponse;
};

export type AcceptOrderResponse =
  AcceptOrderResponses[keyof AcceptOrderResponses];

export type SendNotificationData = {
  body: SendNotificationRestRequest;
  path?: never;
  query?: never;
  url: '/manager/notifications';
};

export type SendNotificationResponses = {
  /**
   * OK
   */
  200: RestResponseNotificationRestResponse;
};

export type SendNotificationResponse =
  SendNotificationResponses[keyof SendNotificationResponses];

export type CreateGameTableData = {
  body: CreateGameTableRestRequest;
  path: {
    gameId: string;
  };
  query?: never;
  url: '/manager/games/{gameId}/tables';
};

export type CreateGameTableResponses = {
  /**
   * OK
   */
  200: RestResponseGameTableRestResponse;
};

export type CreateGameTableResponse =
  CreateGameTableResponses[keyof CreateGameTableResponses];

export type ChangeGameTableParticipantsData = {
  body: ChangeGameTableParticipantsRestRequest;
  path: {
    gameId: string;
    tableId: string;
  };
  query?: never;
  url: '/manager/games/{gameId}/tables/{tableId}/change-participants';
};

export type ChangeGameTableParticipantsResponses = {
  /**
   * OK
   */
  200: RestResponseGameTableRestResponse;
};

export type ChangeGameTableParticipantsResponse =
  ChangeGameTableParticipantsResponses[keyof ChangeGameTableParticipantsResponses];

export type GetGameUserRankingsData = {
  body?: never;
  path: {
    gameId: string;
  };
  query?: never;
  url: '/manager/games/{gameId}/ranks';
};

export type GetGameUserRankingsResponses = {
  /**
   * OK
   */
  200: RestResponseListGameUserRankingRestResponse;
};

export type GetGameUserRankingsResponse =
  GetGameUserRankingsResponses[keyof GetGameUserRankingsResponses];

export type CreateGameUserRankingsData = {
  body: Array<CreateGameUserRankingRestRequest>;
  path: {
    gameId: string;
  };
  query?: never;
  url: '/manager/games/{gameId}/ranks';
};

export type CreateGameUserRankingsResponses = {
  /**
   * OK
   */
  200: RestResponseListGameUserRankingRestResponse;
};

export type CreateGameUserRankingsResponse =
  CreateGameUserRankingsResponses[keyof CreateGameUserRankingsResponses];

export type GetGameStructureTemplatesData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/manager/games/structure-templates';
};

export type GetGameStructureTemplatesResponses = {
  /**
   * OK
   */
  200: RestResponseListGameStructureTemplateRestResponse;
};

export type GetGameStructureTemplatesResponse =
  GetGameStructureTemplatesResponses[keyof GetGameStructureTemplatesResponses];

export type CreateGameStructureTemplateData = {
  body: CreateGameStructureTemplateRestRequest;
  path?: never;
  query?: never;
  url: '/manager/games/structure-templates';
};

export type CreateGameStructureTemplateResponses = {
  /**
   * OK
   */
  200: RestResponseGameStructureTemplateRestResponse;
};

export type CreateGameStructureTemplateResponse =
  CreateGameStructureTemplateResponses[keyof CreateGameStructureTemplateResponses];

export type WithdrawData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/auth/withdraw';
};

export type WithdrawResponses = {
  /**
   * OK
   */
  200: RestResponseUnit;
};

export type WithdrawResponse = WithdrawResponses[keyof WithdrawResponses];

export type RegisterUserData = {
  body: RegisterUserRestRequest;
  path?: never;
  query?: never;
  url: '/auth/register';
};

export type RegisterUserResponses = {
  /**
   * OK
   */
  200: RestResponseAuthTokensRestResponse;
};

export type RegisterUserResponse =
  RegisterUserResponses[keyof RegisterUserResponses];

export type RegisterUserFromConnectingUserData = {
  body: RegisterUserFromConnectingUserRestRequest;
  path?: never;
  query?: never;
  url: '/auth/register/connecting-user';
};

export type RegisterUserFromConnectingUserResponses = {
  /**
   * OK
   */
  200: RestResponseUserRestResponse;
};

export type RegisterUserFromConnectingUserResponse =
  RegisterUserFromConnectingUserResponses[keyof RegisterUserFromConnectingUserResponses];

export type RefreshTokenData = {
  body: RefreshAccessTokenRestRequest;
  path?: never;
  query?: never;
  url: '/auth/refresh';
};

export type RefreshTokenResponses = {
  /**
   * OK
   */
  200: RestResponseAuthTokensRestResponse;
};

export type RefreshTokenResponse =
  RefreshTokenResponses[keyof RefreshTokenResponses];

export type LogoutData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/auth/logout';
};

export type LogoutResponses = {
  /**
   * OK
   */
  200: RestResponseUnit;
};

export type LogoutResponse = LogoutResponses[keyof LogoutResponses];

export type LoginData = {
  body: LoginRestRequest;
  path?: never;
  query?: never;
  url: '/auth/login';
};

export type LoginResponses = {
  /**
   * OK
   */
  200: RestResponseAuthTokensRestResponse;
};

export type LoginResponse = LoginResponses[keyof LoginResponses];

export type CheckAvailableNicknameData = {
  body?: never;
  path?: never;
  query: {
    nickname: string;
  };
  url: '/auth/available-nickname';
};

export type CheckAvailableNicknameResponses = {
  /**
   * OK
   */
  200: RestResponseBoolean;
};

export type CheckAvailableNicknameResponse =
  CheckAvailableNicknameResponses[keyof CheckAvailableNicknameResponses];

export type MakeManagerData = {
  body?: never;
  path: {
    userId: string;
  };
  query?: never;
  url: '/admin/users/{userId}/make-manager';
};

export type MakeManagerResponses = {
  /**
   * OK
   */
  200: RestResponseUserRestResponse;
};

export type MakeManagerResponse =
  MakeManagerResponses[keyof MakeManagerResponses];

export type CreateLeagueData = {
  body: CreateLeagueRestRequest;
  path?: never;
  query?: never;
  url: '/admin/leagues';
};

export type CreateLeagueResponses = {
  /**
   * OK
   */
  200: RestResponseLeagueRestResponse;
};

export type CreateLeagueResponse =
  CreateLeagueResponses[keyof CreateLeagueResponses];

export type CreateGameTypeData = {
  body: CreateGameTypeRestRequest;
  path?: never;
  query?: never;
  url: '/admin/games/game-types';
};

export type CreateGameTypeResponses = {
  /**
   * OK
   */
  200: RestResponseGameTypeRestResponse;
};

export type CreateGameTypeResponse =
  CreateGameTypeResponses[keyof CreateGameTypeResponses];

export type CreateCompetitionData = {
  body: CreateCompetitionRestRequest;
  path?: never;
  query?: never;
  url: '/admin/competitions';
};

export type CreateCompetitionResponses = {
  /**
   * OK
   */
  200: RestResponseCompetitionRestResponse;
};

export type CreateCompetitionResponse =
  CreateCompetitionResponses[keyof CreateCompetitionResponses];

export type ChangeGameStatusData = {
  body: 'WAITING' | 'PLAYING' | 'FINISHED';
  path: {
    gameId: string;
  };
  query?: never;
  url: '/manager/games/{gameId}/status';
};

export type ChangeGameStatusResponses = {
  /**
   * OK
   */
  200: RestResponseGameRestResponse;
};

export type ChangeGameStatusResponse =
  ChangeGameStatusResponses[keyof ChangeGameStatusResponses];

export type SetFileUploadCompletedData = {
  body?: never;
  path: {
    fileId: string;
  };
  query?: never;
  url: '/files/{fileId}/upload-completed';
};

export type SetFileUploadCompletedResponses = {
  /**
   * OK
   */
  200: RestResponseSetFileUploadCompletedRestResponse;
};

export type SetFileUploadCompletedResponse =
  SetFileUploadCompletedResponses[keyof SetFileUploadCompletedResponses];

export type GetReceivedVouchersData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/voucher-templates';
};

export type GetReceivedVouchersResponses = {
  /**
   * OK
   */
  200: RestResponseListCustomerVoucherTemplateRestResponse;
};

export type GetReceivedVouchersResponse =
  GetReceivedVouchersResponses[keyof GetReceivedVouchersResponses];

export type GetGamesInVisitedStoresData = {
  body?: never;
  path?: never;
  query?: {
    size?: number;
  };
  url: '/visited-stores/games';
};

export type GetGamesInVisitedStoresResponses = {
  /**
   * OK
   */
  200: RestResponseListGameRestResponse;
};

export type GetGamesInVisitedStoresResponse =
  GetGamesInVisitedStoresResponses[keyof GetGamesInVisitedStoresResponses];

export type GetListData = {
  body?: never;
  path?: never;
  query?: {
    page?: number;
    size?: number;
  };
  url: '/users';
};

export type GetListResponses = {
  /**
   * OK
   */
  200: RestResponseWithPaginationListUserRestResponse;
};

export type GetListResponse = GetListResponses[keyof GetListResponses];

export type GetMeData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/users/me';
};

export type GetMeResponses = {
  /**
   * OK
   */
  200: UserResponse;
};

export type GetMeResponse = GetMeResponses[keyof GetMeResponses];

export type GetStoresData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/stores';
};

export type GetStoresResponses = {
  /**
   * OK
   */
  200: RestResponseListStoreRestResponse;
};

export type GetStoresResponse = GetStoresResponses[keyof GetStoresResponses];

export type GetStoreData = {
  body?: never;
  path: {
    storeId: number;
  };
  query?: never;
  url: '/stores/{storeId}';
};

export type GetStoreResponses = {
  /**
   * OK
   */
  200: RestResponseStoreRestResponse;
};

export type GetStoreResponse = GetStoreResponses[keyof GetStoreResponses];

export type GetGamesData = {
  body?: never;
  path: {
    storeId: number;
  };
  query?: never;
  url: '/stores/{storeId}/games';
};

export type GetGamesResponses = {
  /**
   * OK
   */
  200: RestResponseListGameRestResponse;
};

export type GetGamesResponse = GetGamesResponses[keyof GetGamesResponses];

export type GetRecentlyVisitedStoresData = {
  body?: never;
  path?: never;
  query?: {
    size?: number;
  };
  url: '/stores/visited';
};

export type GetRecentlyVisitedStoresResponses = {
  /**
   * OK
   */
  200: RestResponseListStoreRestResponse;
};

export type GetRecentlyVisitedStoresResponse =
  GetRecentlyVisitedStoresResponses[keyof GetRecentlyVisitedStoresResponses];

export type GetNearestStoresData = {
  body?: never;
  path?: never;
  query: {
    longitude: number;
    latitude: number;
    size: number;
  };
  url: '/stores/nearest';
};

export type GetNearestStoresResponses = {
  /**
   * OK
   */
  200: RestResponseListStoreRestResponse;
};

export type GetNearestStoresResponse =
  GetNearestStoresResponses[keyof GetNearestStoresResponses];

export type GetReservationsData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/reservations/games';
};

export type GetReservationsResponses = {
  /**
   * OK
   */
  200: RestResponseListGameReservationRestResponse;
};

export type GetReservationsResponse =
  GetReservationsResponses[keyof GetReservationsResponses];

export type GetMyPointRankingsOfStoresData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/points/stores';
};

export type GetMyPointRankingsOfStoresResponses = {
  /**
   * OK
   */
  200: RestResponseListUserPointAggregateOfStoreRestResponse;
};

export type GetMyPointRankingsOfStoresResponse =
  GetMyPointRankingsOfStoresResponses[keyof GetMyPointRankingsOfStoresResponses];

export type GetPointRankingsData = {
  body?: never;
  path: {
    storeId: number;
  };
  query: {
    periodType: 'WEEKLY' | 'MONTHLY' | 'YEARLY' | 'CUSTOM';
    /**
     * 이 파라미터는 periodType 이 CUSTOM 인 경우 필수입니다.
     */
    startFrom?: string;
    /**
     * 이 파라미터는 periodType 이 CUSTOM 인 경우 필수입니다.
     */
    endTo?: string;
    page?: number;
    size?: number;
  };
  url: '/points/rankings/stores/{storeId}';
};

export type GetPointRankingsResponses = {
  /**
   * OK
   */
  200: RestResponseWithPaginationListUserPointAggregateRestResponse;
};

export type GetPointRankingsResponse =
  GetPointRankingsResponses[keyof GetPointRankingsResponses];

export type GetMyPointRankingData = {
  body?: never;
  path: {
    storeId: number;
  };
  query: {
    periodType: 'WEEKLY' | 'MONTHLY' | 'YEARLY' | 'CUSTOM';
    /**
     * 이 파라미터는 periodType 이 CUSTOM 인 경우 필수입니다.
     */
    startFrom?: string;
    /**
     * 이 파라미터는 periodType 이 CUSTOM 인 경우 필수입니다.
     */
    endTo?: string;
  };
  url: '/points/rankings/stores/{storeId}/me';
};

export type GetMyPointRankingResponses = {
  /**
   * OK
   */
  200: RestResponseUserPointAggregateRestResponse;
};

export type GetMyPointRankingResponse =
  GetMyPointRankingResponses[keyof GetMyPointRankingResponses];

export type GetPointRankingsInLeagueData = {
  body?: never;
  path: {
    leagueId: number;
  };
  query: {
    periodType: 'WEEKLY' | 'MONTHLY' | 'YEARLY' | 'CUSTOM';
    /**
     * 이 파라미터는 periodType 이 CUSTOM 인 경우 필수입니다.
     */
    startFrom?: string;
    /**
     * 이 파라미터는 periodType 이 CUSTOM 인 경우 필수입니다.
     */
    endTo?: string;
    page?: number;
    size?: number;
  };
  url: '/points/rankings/leagues/{leagueId}';
};

export type GetPointRankingsInLeagueResponses = {
  /**
   * OK
   */
  200: RestResponseWithPaginationListUserPointAggregateRestResponse;
};

export type GetPointRankingsInLeagueResponse =
  GetPointRankingsInLeagueResponses[keyof GetPointRankingsInLeagueResponses];

export type GetMyPointRankingInLeagueData = {
  body?: never;
  path: {
    leagueId: number;
  };
  query: {
    periodType: 'WEEKLY' | 'MONTHLY' | 'YEARLY' | 'CUSTOM';
    /**
     * 이 파라미터는 periodType 이 CUSTOM 인 경우 필수입니다.
     */
    startFrom?: string;
    /**
     * 이 파라미터는 periodType 이 CUSTOM 인 경우 필수입니다.
     */
    endTo?: string;
  };
  url: '/points/rankings/leagues/{leagueId}/me';
};

export type GetMyPointRankingInLeagueResponses = {
  /**
   * OK
   */
  200: RestResponseUserPointAggregateRestResponse;
};

export type GetMyPointRankingInLeagueResponse =
  GetMyPointRankingInLeagueResponses[keyof GetMyPointRankingInLeagueResponses];

export type GetReceivedPointAwardsData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/points/awards';
};

export type GetReceivedPointAwardsResponses = {
  /**
   * OK
   */
  200: RestResponseListPointAwardRestResponse;
};

export type GetReceivedPointAwardsResponse =
  GetReceivedPointAwardsResponses[keyof GetReceivedPointAwardsResponses];

export type GetItemsInStoreData = {
  body?: never;
  path: {
    storeId: number;
  };
  query?: {
    itemCategory?: 'MEAL' | 'ALCOHOL' | 'BEVERAGE' | 'ETC';
  };
  url: '/order/stores/{storeId}/items';
};

export type GetItemsInStoreResponses = {
  /**
   * OK
   */
  200: RestResponseListItemRestResponse;
};

export type GetItemsInStoreResponse =
  GetItemsInStoreResponses[keyof GetItemsInStoreResponses];

export type GetItemData = {
  body?: never;
  path: {
    itemId: string;
  };
  query?: never;
  url: '/order/items/{itemId}';
};

export type GetItemResponses = {
  /**
   * OK
   */
  200: RestResponseItemRestResponse;
};

export type GetItemResponse = GetItemResponses[keyof GetItemResponses];

export type AuthorizeWithKakaoOAuthData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/oauth2/kakao/authorize';
};

export type AuthorizeWithKakaoOAuthResponses = {
  /**
   * OK
   */
  200: RestResponseString;
};

export type AuthorizeWithKakaoOAuthResponse =
  AuthorizeWithKakaoOAuthResponses[keyof AuthorizeWithKakaoOAuthResponses];

export type ProcessOAuthCallbackData = {
  body?: never;
  path?: never;
  query?: {
    code?: string;
    error_description?: string;
  };
  url: '/oauth2/callback';
};

export type ProcessOAuthCallbackResponses = {
  /**
   * OK
   */
  200: RestResponseProcessOAuthCallbackRestResponse;
};

export type ProcessOAuthCallbackResponse =
  ProcessOAuthCallbackResponses[keyof ProcessOAuthCallbackResponses];

export type GetReceivedNotificationsData = {
  body?: never;
  path?: never;
  query?: {
    eventType?: 'CUSTOM';
    page?: number;
    size?: number;
  };
  url: '/notifications';
};

export type GetReceivedNotificationsResponses = {
  /**
   * OK
   */
  200: RestResponseWithPaginationListNotificationContentRestResponse;
};

export type GetReceivedNotificationsResponse =
  GetReceivedNotificationsResponses[keyof GetReceivedNotificationsResponses];

export type GetNotificationData = {
  body?: never;
  path: {
    notificationId: string;
  };
  query?: never;
  url: '/notifications/{notificationId}';
};

export type GetNotificationResponses = {
  /**
   * OK
   */
  200: RestResponseNotificationContentRestResponse;
};

export type GetNotificationResponse =
  GetNotificationResponses[keyof GetNotificationResponses];

export type GetStoreVisitsData = {
  body?: never;
  path: {
    storeId: number;
  };
  query?: {
    date?: string;
  };
  url: '/manager/stores/{storeId}/visits';
};

export type GetStoreVisitsResponses = {
  /**
   * OK
   */
  200: RestResponseListStoreVisitRestResponse;
};

export type GetStoreVisitsResponse =
  GetStoreVisitsResponses[keyof GetStoreVisitsResponses];

export type GetStoreUsersData = {
  body?: never;
  path: {
    storeId: number;
  };
  query?: {
    userType?: 'NORMAL' | 'TEMP';
    /**
     * 사용자 이름, 전화번호, 여권번호 필드 대상 keyword 검색 파라미터입니다.userType 쿼리 파라미터가 null 일 때만 키워드 검색이 가능합니다.
     */
    keyword?: string;
    page?: number;
    size?: number;
  };
  url: '/manager/stores/{storeId}/users';
};

export type GetStoreUsersResponses = {
  /**
   * OK
   */
  200: RestResponseWithPaginationListUserRestResponse;
};

export type GetStoreUsersResponse =
  GetStoreUsersResponses[keyof GetStoreUsersResponses];

export type GetAwardedPointAwardsData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/manager/points/awards';
};

export type GetAwardedPointAwardsResponses = {
  /**
   * OK
   */
  200: RestResponseListPointAwardRestResponse;
};

export type GetAwardedPointAwardsResponse =
  GetAwardedPointAwardsResponses[keyof GetAwardedPointAwardsResponses];

export type GetPaymentsInStoreOfUserData = {
  body?: never;
  path: {
    storeId: number;
    userId: string;
  };
  query?: {
    page?: number;
    size?: number;
  };
  url: '/manager/payment/stores/{storeId}/users/{userId}/payments';
};

export type GetPaymentsInStoreOfUserResponses = {
  /**
   * OK
   */
  200: RestResponseWithPaginationListPaymentRestResponse;
};

export type GetPaymentsInStoreOfUserResponse =
  GetPaymentsInStoreOfUserResponses[keyof GetPaymentsInStoreOfUserResponses];

export type GetOrdersInStoreData = {
  body?: never;
  path: {
    storeId: number;
  };
  query?: {
    status?: 'ORDERED' | 'PREPARING' | 'COMPLETED' | 'CANCELED';
    page?: number;
    size?: number;
  };
  url: '/manager/order/stores/{storeId}/orders';
};

export type GetOrdersInStoreResponses = {
  /**
   * OK
   */
  200: RestResponseWithPaginationListOrderRestResponse;
};

export type GetOrdersInStoreResponse =
  GetOrdersInStoreResponses[keyof GetOrdersInStoreResponses];

export type GetLeaguesData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/leagues';
};

export type GetLeaguesResponses = {
  /**
   * OK
   */
  200: RestResponseListLeagueRestResponse;
};

export type GetLeaguesResponse = GetLeaguesResponses[keyof GetLeaguesResponses];

export type GetLeagueData = {
  body?: never;
  path: {
    id: number;
  };
  query?: never;
  url: '/leagues/{id}';
};

export type GetLeagueResponses = {
  /**
   * OK
   */
  200: RestResponseLeagueRestResponse;
};

export type GetLeagueResponse = GetLeagueResponses[keyof GetLeagueResponses];

export type HealthData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/health';
};

export type HealthResponses = {
  /**
   * OK
   */
  200: string;
};

export type HealthResponse = HealthResponses[keyof HealthResponses];

export type GetNotFinishedGamesData = {
  body?: never;
  path?: never;
  query?: {
    keyword?: string;
    page?: number;
    size?: number;
  };
  url: '/games';
};

export type GetNotFinishedGamesResponses = {
  /**
   * OK
   */
  200: RestResponseWithPaginationListGameRestResponse;
};

export type GetNotFinishedGamesResponse =
  GetNotFinishedGamesResponses[keyof GetNotFinishedGamesResponses];

export type GetGameData = {
  body?: never;
  path: {
    gameId: string;
  };
  query?: never;
  url: '/games/{gameId}';
};

export type GetGameResponses = {
  /**
   * OK
   */
  200: RestResponseGameRestResponse;
};

export type GetGameResponse = GetGameResponses[keyof GetGameResponses];

export type GetGameTablesData = {
  body?: never;
  path: {
    gameId: string;
  };
  query?: never;
  url: '/games/{gameId}/tables';
};

export type GetGameTablesResponses = {
  /**
   * OK
   */
  200: RestResponseListGameTableRestResponse;
};

export type GetGameTablesResponse =
  GetGameTablesResponses[keyof GetGameTablesResponses];

export type GetCurrentUserGameRankingsData = {
  body?: never;
  path?: never;
  query?: {
    page?: number;
    size?: number;
  };
  url: '/games/ranks';
};

export type GetCurrentUserGameRankingsResponses = {
  /**
   * OK
   */
  200: RestResponseWithPaginationListGameUserRankingRestResponse;
};

export type GetCurrentUserGameRankingsResponse =
  GetCurrentUserGameRankingsResponses[keyof GetCurrentUserGameRankingsResponses];

export type GetGameTypesData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/games/game-types';
};

export type GetGameTypesResponses = {
  /**
   * OK
   */
  200: RestResponseListGameTypeRestResponse;
};

export type GetGameTypesResponse =
  GetGameTypesResponses[keyof GetGameTypesResponses];

export type GetGameTypeData = {
  body?: never;
  path: {
    gameTypeId: number;
  };
  query?: never;
  url: '/games/game-types/{gameTypeId}';
};

export type GetGameTypeResponses = {
  /**
   * OK
   */
  200: RestResponseGameTypeRestResponse;
};

export type GetGameTypeResponse =
  GetGameTypeResponses[keyof GetGameTypeResponses];

export type GetFilesData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/files';
};

export type GetFilesResponses = {
  /**
   * OK
   */
  200: RestResponseGetFilesRestResponse;
};

export type GetFilesResponse = GetFilesResponses[keyof GetFilesResponses];

export type GetFileByIdData = {
  body?: never;
  path: {
    fileId: string;
  };
  query?: never;
  url: '/files/{fileId}';
};

export type GetFileByIdResponses = {
  /**
   * OK
   */
  200: RestResponseGetFileRestResponse;
};

export type GetFileByIdResponse =
  GetFileByIdResponses[keyof GetFileByIdResponses];

export type GetPresignedGetUrlData = {
  body?: never;
  path: {
    fileId: string;
  };
  query?: never;
  url: '/files/{fileId}/presigned-object-url';
};

export type GetPresignedGetUrlResponses = {
  /**
   * OK
   */
  200: RestResponseGetPresignedObjectUrlRestResponse;
};

export type GetPresignedGetUrlResponse =
  GetPresignedGetUrlResponses[keyof GetPresignedGetUrlResponses];

export type GetPresignedUploadUrlData = {
  body?: never;
  path?: never;
  query: {
    filename: string;
  };
  url: '/files/presigned-upload-url';
};

export type GetPresignedUploadUrlResponses = {
  /**
   * OK
   */
  200: RestResponseGetPresignedUploadUrlRestResponse;
};

export type GetPresignedUploadUrlResponse =
  GetPresignedUploadUrlResponses[keyof GetPresignedUploadUrlResponses];

export type GetCompetitionsData = {
  body?: never;
  path?: never;
  query: {
    durationFrom: string;
    durationTo: string;
  };
  url: '/competitions';
};

export type GetCompetitionsResponses = {
  /**
   * OK
   */
  200: RestResponseListCompetitionRestResponse;
};

export type GetCompetitionsResponse =
  GetCompetitionsResponses[keyof GetCompetitionsResponses];

export type GetCompetitionData = {
  body?: never;
  path?: never;
  query: {
    competitionId: string;
  };
  url: '/competitions/{competitionId}';
};

export type GetCompetitionResponses = {
  /**
   * OK
   */
  200: RestResponseCompetitionRestResponse;
};

export type GetCompetitionResponse =
  GetCompetitionResponses[keyof GetCompetitionResponses];

export type ClientOptions = {
  baseURL:
    | 'https://dev.api.yajasu.kr'
    | 'http://dev.api.yajasu.kr'
    | (string & {});
};
